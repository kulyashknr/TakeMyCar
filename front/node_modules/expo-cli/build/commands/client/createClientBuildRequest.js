'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator;

function _load_regenerator() {
  return _regenerator = _interopRequireDefault(require('babel-runtime/regenerator'));
}

var _asyncToGenerator2;

function _load_asyncToGenerator() {
  return _asyncToGenerator2 = _interopRequireDefault(require('babel-runtime/helpers/asyncToGenerator'));
}

var _xdl;

function _load_xdl() {
  return _xdl = require('xdl');
}

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  var _ref = (0, (_asyncToGenerator2 || _load_asyncToGenerator()).default)( /*#__PURE__*/(_regenerator || _load_regenerator()).default.mark(function _callee(_ref2) {
    var _ref2$user = _ref2.user,
        user = _ref2$user === undefined ? null : _ref2$user,
        context = _ref2.context,
        distributionCert = _ref2.distributionCert,
        pushKey = _ref2.pushKey,
        udids = _ref2.udids,
        addUdid = _ref2.addUdid,
        email = _ref2.email;
    return (_regenerator || _load_regenerator()).default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return (_xdl || _load_xdl()).ApiV2.clientForUser(user).postAsync('client-build/create-ios-request', {
              appleSession: context.fastlaneSession,
              appleTeamId: context.team.id,
              appleTeamName: context.team.name,
              addUdid: addUdid,
              bundleIdentifier: context.bundleIdentifier,
              email: email,
              credentials: {
                apnsKeyP8: pushKey.apnsKeyP8,
                apnsKeyId: pushKey.apnsKeyId,
                certP12: distributionCert.certP12,
                certPassword: distributionCert.certPassword,
                teamId: context.team.id,
                appleSession: context.fastlaneSession,
                udids: udids
              }
            });

          case 2:
            return _context.abrupt('return', _context.sent);

          case 3:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, this);
  }));

  function createClientBuildRequest(_x) {
    return _ref.apply(this, arguments);
  }

  return createClientBuildRequest;
}();

module.exports = exports['default'];
//# sourceMappingURL=../../__sourcemaps__/commands/client/createClientBuildRequest.js.map
